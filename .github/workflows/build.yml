name: Build

on:
  push:
    branches:
    - 'releases'
    tags:
    - "*"
  workflow_dispatch:
  
jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]

    name: build and release electron app
    runs-on: ${{ matrix.os }}

    steps:
      - name: check out git repository
        uses: actions/checkout@v3.0.0
  
      - name: Install Node.js
        uses: actions/setup-node@v3.0.0
        with:
          node-version: "16"
  
      - name: Install Dependencies
        run: npm install
  
      - name: build vue cli
        run: npm run build
  
      - name: Build Electron App
        run: npm run pack
        env:
          GH_TOKEN: ${{ secrets.SECRET }}
  
      - name: Cleanup Artifacts for Windows
        if: ${{ matrix.os }} == "windows-latest"
        run: |
          $path = "release"
          Get-ChildItem -Path $path -Recurse | Where-Object { !$_.Name.EndsWith(".exe") } | Remove-Item
        shell: pwsh
  
      - name: Cleanup Artifacts for MacOS
        if: ${{ matrix.os }} == "macos-latest"
        run: |
          npx rimraf "release/!(*.dmg)"
  
      - name: upload artifacts
        uses: actions/upload-artifact@v3.0.0
        with:
          name: ${{ matrix.os }}
          path: release
  
      - name: release
        uses: softprops/action-gh-release@v0.1.14
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "release/**"
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET }}
